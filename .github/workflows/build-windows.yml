name: Windows Build

on:
  push:
    tags: [ '*' ]
  pull_request:
    branches: [ main ]

env:
  Qt6_VERSION: 6.8.0

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v4
      with:
        path: C:\Qt
        key: windows-qt

    - name: Install Qt
      if: steps.cache-qt.outputs.cache-hit != 'true'
      run: |
        choco install -y aqt --version 3.2.1
        aqt install-qt --timeout 30 --outputdir c:\Qt windows desktop $env:Qt6_VERSION win64_msvc2022_64 -m qtcharts
   
    - name: Cache OpenCV
      id: cache-opencv
      uses: actions/cache@v4
      with:
        path: C:\opencv
        key: windows-opencv
        
    - name: Install OpenCV
      if: steps.cache-opencv.outputs.cache-hit != 'true'
      run: |
        choco install -y opencv --package-parameters "'/InstallationPath:C:\'"
   
    - name: Configure CMake
      run: |
        $env:Qt6_DIR="C:\Qt\$env:Qt6_VERSION\msvc2022_64\lib\cmake"
        cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DQt6_DIR=$env:Qt6_DIR -DOpenCV_DIR=C:/opencv/build/x64/vc16/lib
    
    - name: Build Project
      run: |
        cmake --build build --config Release

        & "C:\Qt\$env:Qt6_VERSION\msvc2022_64\bin\windeployqt.exe" build\Release\
        cp C:\opencv\build\x64\vc16\bin\opencv_world4110.dll build\Release\
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: build/Release/


    - name: Run Tests
      run: |
        cd build
        ctest -C Release --output-on-failure

